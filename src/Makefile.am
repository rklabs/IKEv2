## Process this file with automake to produce Makefile.in

## Created by Anjuta
CPPLINT = cpplint
FINALTARGET = ikev2

AM_CPPFLAGS = -DPACKAGE_LOCALE_DIR=\""$(localedir)"\"
AM_CPPFLAGS += -DPACKAGE_SRC_DIR=\""$(srcdir)"\"
AM_CPPFLAGS += -DPACKAGE_DATA_DIR=\""$(pkgdatadir)"\"
AM_CPPFLAGS += -fprofile-arcs -ftest-coverage
AM_CPPFLAGS += -Wall -Werror -Wno-unused
AM_CPPFLAGS += -DIKEV2_DEBUG
AM_CPPFLAGS += -pg

bin_PROGRAMS = $(FINALTARGET)

## Put all your source files here
ikev2_SOURCES = ikev2main.cc
ikev2_SOURCES += ikev2payload.cc
ikev2_SOURCES += ikev2packet.cc
ikev2_SOURCES += sa.cc
ikev2_SOURCES += ikev2sm.cc
ikev2_SOURCES += logging.cc
ikev2_SOURCES += network.cc
ikev2_SOURCES += crypto.cc
ikev2_SOURCES += job.cc
ikev2_SOURCES += config.cc
ikev2_SOURCES += timer.cc
ikev2_SOURCES += utils.cc

ikev2_LDFLAGS = --coverage
ikev2_LDFLAGS += -lpthread -Wl,--no-as-needed
ikev2_LDFLAGS += -llog4cpp
ikev2_LDFLAGS += -lssl

ikev2_LDADD =

## Perform lint using Google's cpplint
cpplint: ; @for cpp in *.cc; do echo "Linting $$cpp"; cpplint $$cpp; done ;
hlint: ; @for cpp in *.hh; do echo "Linting $$cpp"; cpplint $$cpp; done ;

## Get coverage report and display in chrome
coverage: ;lcov --no-external -b . -d . -c -o report; genhtml -f -s -t "IKEv2" --legend --sort --function-coverage --branch-coverage --demangle-cpp report ; /opt/google/chrome/google-chrome index.html

## Clean files generated by gcov
clean-local: clean-local-check
.PHONY: clean-local-check
clean-local-check: ; rm -rf *.g* *.png *.html *.css home usr 4.8 report src *.out *.out.*
