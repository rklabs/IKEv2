## Process this file with automake to produce Makefile.in

CPPLINT = cpplint
FINALTARGET = ikev2
ECHO = echotest

AM_CPPFLAGS = -DPACKAGE_LOCALE_DIR=\""$(localedir)"\"
AM_CPPFLAGS += -DPACKAGE_SRC_DIR=\""$(srcdir)"\"
AM_CPPFLAGS += -DPACKAGE_DATA_DIR=\""$(pkgdatadir)"\"
AM_CPPFLAGS += -Wall -Werror

# Enable debugging
if IKEV2_DBG
    AM_CPPFLAGS += -DIKEV2_DBG
    AM_CPPFLAGS += -g -pg
endif

# Enable code coverage
if IKEV2_GCOV
    AM_CPPFLAGS += -fprofile-arcs -ftest-coverage
endif

bin_PROGRAMS = $(FINALTARGET) $(ECHO)

## Put all your source files here
ikev2_SOURCES = IKEv2Main.cc
ikev2_SOURCES += IKEv2Payload.cc
ikev2_SOURCES += IKEv2Packet.cc
ikev2_SOURCES += IKEv2Sm.cc
ikev2_SOURCES += Logging.cc
ikev2_SOURCES += Network.cc
ikev2_SOURCES += Crypto.cc
ikev2_SOURCES += Threadpool.cc
ikev2_SOURCES += IKEv2Config.cc
ikev2_SOURCES += Timer.cc
ikev2_SOURCES += Utils.cc
ikev2_SOURCES += Synchro.cc
ikev2_SOURCES += Asyncio.cc

# enable google's backtrace support
if IKEV2_DBG
    ikev2_SOURCES += Backward.cc
endif
# linker flags for 3rd party libs
# std::thread
ikev2_LDFLAGS = -lpthread -Wl,--no-as-needed
# log4cpp
ikev2_LDFLAGS += -llog4cpp
# openssl
ikev2_LDFLAGS += -lssl
# boost
ikev2_LDFLAGS += -lboost_system

# Enable coverage
if IKEV2_GCOV
    ikev2_LDFLAGS += --coverage
endif

# enable google's backtrace support
if IKEV2_DBG
    ikev2_LDFLAGS += -ldw
endif

ikev2_LDADD =

##################################
echotest_SOURCES = EchoTest.cc
echotest_LDFLAGS = --coverage -lpthread -Wl,--no-as-needed -fprofile-arcs -ftest-coverage
##################################

# Perform lint using Google's cpplint
cpplint: ; @for cpp in *.cc; do echo "Linting $$cpp"; cpplint $$cpp; done ;
hlint: ; @for cpp in *.hh; do echo "Linting $$cpp"; cpplint $$cpp; done ;

# Enable coverage
if IKEV2_GCOV
# Get coverage report and display in chrome
coverage: ;lcov --no-external -b . -d . -c -o report; genhtml -f -s -t "IKEv2" --legend --sort --function-coverage --branch-coverage --demangle-cpp report ; /opt/google/chrome/google-chrome index.html

endif

# Run valgrind
if IKEV2_DBG
memcheck: ;valgrind --leak-check=full --show-reachable=yes --track-fds=yes  --track-origins=yes --read-var-info=yes "./"$(FINALTARGET)
endif

cppcheck: ;cppcheck --inconclusive --enable=all .

# Clean files generated by gcov
clean-local: clean-local-check
.PHONY: clean-local-check
clean-local-check: ; rm -rf *core* *.g* *.png *.html *.css home usr 4.8 report src *.out *.out.*
